name: CI

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - '*.md'
  push:
    branches:
      - master
    paths-ignore:
      - '*.md'

env:
  CI: true
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dkotlin.incremental=false
  TERM: dumb

jobs:
  assemble:
    name: Assemble
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-
      - run: |
          cd sample/ | ./gradlew clean assembleDebug
  checks:
    name: Checks (unit tests and static analysis, TODO:add detekt check after set it up)
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-
      - run: |
          ./gradlew :plugin:test
  functional-tests:
    name: Functional tests
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-
      - name: Prepare environment
        env:
          SIGNING_SECRET_KEY_CONTENT: ${{ secrets.SIGNING_SECRET_KEY_CONTENT }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
        run: |
          git fetch --unshallow
          sudo bash -c "echo '$SIGNING_SECRET_KEY_CONTENT' | base64 -d > '$SIGNING_SECRET_KEY_RING_FILE'"
      - name: Build & Release all Polyfill libraries to MavenLocal
        run: chmod +x ./publish_to_local.sh | ./publish_to_local.sh
        env:
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
          SIGNING_SECRET_KEY_CONTENT: ${{ secrets.SIGNING_SECRET_KEY_CONTENT }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GH_DEV_TOKEN: ${{ secrets.GH_DEV_TOKEN }}
      - run: |
          ./gradlew clean :functional-test:functionalTest
      
